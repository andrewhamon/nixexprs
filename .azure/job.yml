parameters:
  name: build
  vmImage: ubuntu-latest
  variables: {}
  allowFailure: false
  __osname:
    ubuntu-16.04: linux
    ubuntu-latest: linux
    macos-10.13: macos10.13
    macos-10.14: macos10.14
    macos-latest: macos
  __isLinux:
    ubuntu-16.04: 'True'
    ubuntu-latest: 'True'

jobs:
- job: ${{parameters.name}}
  displayName: ${{parameters.__osname[parameters.vmImage]}}/${{coalesce(parameters.variables.NIX_CHANNELS_NIXPKGS, '$(NIX_CHANNELS_NIXPKGS)')}}
  timeoutInMinutes: 0
  pool:
    vmImage: ${{parameters.vmImage}}
  variables:
    ${{insert}}: ${{parameters.variables}}
    TERM: linux
  continueOnError: ${{ eq(parameters.allowFailure, 'true') }}
  steps:
  - checkout: self
    submodules: true
  - template: azure/nix/install.yml@ci
    parameters:
      ciVersion: master
      config: ci/config.nix
  #- bash: nix eval -f default.nix lib
  #  displayName: nix eval lib
  - bash: nix eval -f default.nix modules
    displayName: nix eval modules
    timeoutInMinutes: 1
  - bash: nix eval -f default.nix overlays
    displayName: nix eval overlays
    timeoutInMinutes: 1
  - template: azure/nix/build.yml@ci
    parameters:
      name: packages
      attr: packages
      file: ci
      timeoutInMinutes: 180 # max: 360
  - template: azure/nix/build.yml@ci
    parameters:
      name: shells
      attr: shells
      file: ci
      timeoutInMinutes: 90
  - template: azure/nix/cache.yml@ci
    parameters:
      name: packages
      CACHIX_SIGNING_KEY: $(cachix.signing.key)
      CACHIX_CACHE: $(CACHIX_CACHE)
      condition: always() # TODO: this
  - template: azure/nix/cache.yml@ci
    parameters:
      name: shells
      CACHIX_SIGNING_KEY: $(cachix.signing.key)
      CACHIX_CACHE: $(CACHIX_CACHE)
      condition: always() # TODO: this
  - bash: nix-build --no-out-link --show-trace ci -A tests
    displayName: nix test
    env:
      GITHUB_TOKEN: $(github.token.empty)
  - ${{ if eq(parameters.__isLinux[parameters.vmImage], 'True') }}:
    - bash: nix-build --no-out-link --show-trace ci -A modules
      displayName: nix test modules
      condition: and(succeeded(), not(eq(variables['Build.Reason'], 'Schedule')), not(eq(variables['NIX_CHANNELS_HOME_MANAGER'], 'release-19.03')))
